plugins {
    alias(libs.plugins.jetbrains.kotlin.android)
}

apply plugin: 'com.android.library'

android {
    namespace = "org.libsdl3.app"
    compileSdkVersion versions.target_sdk

    defaultConfig {
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.target_sdk

        ndk {
            abiFilters = []
            abiFilters.addAll(abi_filters)
        }

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_PLATFORM=android-$versions.native_android_platform_version",
                    "-DCMAKE_CXX_FLAGS=$build_flags.CMAKE_CXXFLAGS",
                    "-DCMAKE_C_FLAGS=$build_flags.CMAKE_CFLAGS",
                    "-DCMAKE_SHARED_LINKER_FLAGS=$build_flags.CMAKE_SHADERLINKER_FLAGS"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "$rootDir/sdl3/CMakeLists.txt"
            version versions.cmake_version
        }
    }
    buildToolsVersion versions.build_tools_version
    ndkVersion versions.ndk_version
    kotlinOptions {
        jvmTarget = '17'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    lint {
        abortOnError = false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation libs.kotlin.stdlib
    implementation libs.kotlinx.coroutines.core
    implementation libs.androidx.appcompat
}
